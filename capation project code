#include <stdio.h>

#include <ctype.h>

#define MAX 100

char stack[MAX];

int top = -1;

void push(char c) {

}

stack[++top] = c;

char pop() {

while ((c = infix[i++]) != '\0') {

if (isalnum(c)) {

postfix[j++] = c;

} else if (c == '(') {

push(c);

} else if (c = ')') {

while (stack[top] != '(') {

}

postfix[j++] = pop();

top--; // Pop the '('

} else {

while (top != -1 && precedence(stack[top]) >= precedence(c)) {

return stack[top--];

}

int precedence(char c) {

switch (c) {

case '+':

case '-': return 1;

case*

case ": return 2;

case: return 3:

}

}

return 0;

void infixToPostfix(char* infix, char* postfix) {

}

int i = 0, j = 0;

char c;

postfix[j++] = pop();

}

}

}

push(c);

while (top != -1) {

postfix[j++] = pop();

}

postfix[j] = '\0';

}

int main() {

char infix[MAX], postfix[MAX];

printf("Enter infix expression: ");

scanf("%s", infix);

infixToPostfix(infix, postfix);

printf("Postfix expression: %s\n", postfix);

return 0;
